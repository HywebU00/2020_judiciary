// 父層啟動flex： @extend %flex_setting;

// 子層 - 平均欄寬(有 margin gutter)
@mixin flex-layout($columns, $margin-gutter) {
  // 啟動計算公式 ------
  // 欄數（$columns）、欄距（$margin-gutter）
  // columns >= 10 時，第11欄會有跑版問題，故 ＋4px 修正之
  flex-basis: calc(100% / #{$columns} - #{$margin-gutter});
  max-width: calc(100% / #{$columns} - #{$margin-gutter});

  @if $columns == 1 {
    &:last-child{
      &:nth-child(3n-1), &:nth-child(3n-2),
      &:nth-child(4n-1), &:nth-child(4n-2){ margin-right: 0; }
    }
  } @else if $columns == 2 {
    &:last-child{
      &:nth-child(2n),
      &:nth-child(3n-1),
      &:nth-child(4n-3){ margin-right: 0; }
      // &:nth-child(4n-3){ margin-right: calc( (100% / #{$columns} - #{$margin-gutter}) + #{$margin-gutter}*#{$columns} / (#{$columns} - 1) ); }
    }
  } @else if $columns == 3 {
    &:last-child{
      &:nth-child(3n-3){ margin-right: 0; }
      &:nth-child(3n-2){ margin-right: calc( (100% / #{$columns} - #{$margin-gutter})*2 + (#{$margin-gutter}*#{$columns})*2 / (#{$columns} - 1) ); }
      &:nth-child(3n-1){ margin-right: calc( (100% / #{$columns} - #{$margin-gutter}) + #{$margin-gutter}*#{$columns} / (#{$columns} - 1) ); }
    }
  } @else if $columns == 4 {
    &:last-child{
      &:nth-child(4n-4){ margin-right: 0; }
      &:nth-child(4n-3){ margin-right: calc( (100% / #{$columns} - #{$margin-gutter})*3 + (#{$margin-gutter}*#{$columns})*3 / (#{$columns} - 1) ); }
      &:nth-child(4n-2){ margin-right: calc( (100% / #{$columns} - #{$margin-gutter})*2 + (#{$margin-gutter}*#{$columns})*2 / (#{$columns} - 1) ); }
      &:nth-child(4n-1){ margin-right: calc( (100% / #{$columns} - #{$margin-gutter}) + #{$margin-gutter}*#{$columns} / (#{$columns} - 1) ); }
    }
  } @else if $columns == 5 {
    &:last-child{
      &:nth-child(5n-5){ margin-right: 0; }
      &:nth-child(5n-4){ margin-right: calc( (100% / #{$columns} - #{$margin-gutter})*4 + (#{$margin-gutter}*#{$columns})*4 / (#{$columns} - 1) ); }
      &:nth-child(5n-3){ margin-right: calc( (100% / #{$columns} - #{$margin-gutter})*3 + (#{$margin-gutter}*#{$columns})*3 / (#{$columns} - 1) ); }
      &:nth-child(5n-2){ margin-right: calc( (100% / #{$columns} - #{$margin-gutter})*2 + (#{$margin-gutter}*#{$columns})*2 / (#{$columns} - 1) ); }
      &:nth-child(5n-1){ margin-right: calc( (100% / #{$columns} - #{$margin-gutter}) + #{$margin-gutter}*#{$columns} / (#{$columns} - 1) ); }
    }
  } @else if $columns == 6 {
    &:last-child{
      &:nth-child(6n-6){ margin-right: 0; }
      &:nth-child(6n-5){ margin-right: calc( (100% / #{$columns} - #{$margin-gutter})*5 + (#{$margin-gutter}*#{$columns})*5 / (#{$columns} - 1) ); }
      &:nth-child(6n-4){ margin-right: calc( (100% / #{$columns} - #{$margin-gutter})*4 + (#{$margin-gutter}*#{$columns})*4 / (#{$columns} - 1) ); }
      &:nth-child(6n-3){ margin-right: calc( (100% / #{$columns} - #{$margin-gutter})*3 + (#{$margin-gutter}*#{$columns})*3 / (#{$columns} - 1) ); }
      &:nth-child(6n-2){ margin-right: calc( (100% / #{$columns} - #{$margin-gutter})*2 + (#{$margin-gutter}*#{$columns})*2 / (#{$columns} - 1) ); }
      &:nth-child(6n-1){ margin-right: calc( (100% / #{$columns} - #{$margin-gutter}) + #{$margin-gutter}*#{$columns} / (#{$columns} - 1) ); }

    }
  } @else if $columns == 7 {
    &:last-child{
      &:nth-child(7n-7){ margin-right: 0; }
      &:nth-child(7n-6){ margin-right: calc( (100% / #{$columns} - #{$margin-gutter})*6 + (#{$margin-gutter}*#{$columns})*6 / (#{$columns} - 1) ); }
      &:nth-child(7n-5){ margin-right: calc( (100% / #{$columns} - #{$margin-gutter})*5 + (#{$margin-gutter}*#{$columns})*5 / (#{$columns} - 1) ); }
      &:nth-child(7n-4){ margin-right: calc( (100% / #{$columns} - #{$margin-gutter})*4 + (#{$margin-gutter}*#{$columns})*4 / (#{$columns} - 1) ); }
      &:nth-child(7n-3){ margin-right: calc( (100% / #{$columns} - #{$margin-gutter})*3 + (#{$margin-gutter}*#{$columns})*3 / (#{$columns} - 1) ); }
      &:nth-child(7n-2){ margin-right: calc( (100% / #{$columns} - #{$margin-gutter})*2 + (#{$margin-gutter}*#{$columns})*2 / (#{$columns} - 1) ); }
      &:nth-child(7n-1){ margin-right: calc( (100% / #{$columns} - #{$margin-gutter}) + #{$margin-gutter}*#{$columns} / (#{$columns} - 1) ); }
    }
  } @else if $columns == 8 {
    &:last-child{
      &:nth-child(8n-8){ margin-right: 0; }
      &:nth-child(8n-7){ margin-right: calc( (100% / #{$columns} - #{$margin-gutter})*7 + (#{$margin-gutter}*#{$columns})*7 / (#{$columns} - 1) ); }
      &:nth-child(8n-6){ margin-right: calc( (100% / #{$columns} - #{$margin-gutter})*6 + (#{$margin-gutter}*#{$columns})*6 / (#{$columns} - 1) ); }
      &:nth-child(8n-5){ margin-right: calc( (100% / #{$columns} - #{$margin-gutter})*5 + (#{$margin-gutter}*#{$columns})*5 / (#{$columns} - 1) ); }
      &:nth-child(8n-4){ margin-right: calc( (100% / #{$columns} - #{$margin-gutter})*4 + (#{$margin-gutter}*#{$columns})*4 / (#{$columns} - 1) ); }
      &:nth-child(8n-3){ margin-right: calc( (100% / #{$columns} - #{$margin-gutter})*3 + (#{$margin-gutter}*#{$columns})*3 / (#{$columns} - 1) ); }
      &:nth-child(8n-2){ margin-right: calc( (100% / #{$columns} - #{$margin-gutter})*2 + (#{$margin-gutter}*#{$columns})*2 / (#{$columns} - 1) ); }
      &:nth-child(8n-1){ margin-right: calc( (100% / #{$columns} - #{$margin-gutter}) + #{$margin-gutter}*#{$columns} / (#{$columns} - 1) ); }
    }
  } @else if $columns == 9 {
    &:last-child{
      &:nth-child(9n-9){ margin-right: 0; }
      &:nth-child(9n-8){ margin-right: calc( (100% / #{$columns} - #{$margin-gutter})*8 + (#{$margin-gutter}*#{$columns})*8 / (#{$columns} - 1) ); }
      &:nth-child(9n-7){ margin-right: calc( (100% / #{$columns} - #{$margin-gutter})*7 + (#{$margin-gutter}*#{$columns})*7 / (#{$columns} - 1) ); }
      &:nth-child(9n-6){ margin-right: calc( (100% / #{$columns} - #{$margin-gutter})*6 + (#{$margin-gutter}*#{$columns})*6 / (#{$columns} - 1) ); }
      &:nth-child(9n-5){ margin-right: calc( (100% / #{$columns} - #{$margin-gutter})*5 + (#{$margin-gutter}*#{$columns})*5 / (#{$columns} - 1) ); }
      &:nth-child(9n-4){ margin-right: calc( (100% / #{$columns} - #{$margin-gutter})*4 + (#{$margin-gutter}*#{$columns})*4 / (#{$columns} - 1) ); }
      &:nth-child(9n-3){ margin-right: calc( (100% / #{$columns} - #{$margin-gutter})*3 + (#{$margin-gutter}*#{$columns})*3 / (#{$columns} - 1) ); }
      &:nth-child(9n-2){ margin-right: calc( (100% / #{$columns} - #{$margin-gutter})*2 + (#{$margin-gutter}*#{$columns})*2 / (#{$columns} - 1) ); }
      &:nth-child(9n-1){ margin-right: calc( (100% / #{$columns} - #{$margin-gutter}) + #{$margin-gutter}*#{$columns} / (#{$columns} - 1) ); }
    }
  } @else if $columns == 10 {
    // columns >= 10 時，第11欄會有跑版問題，故 ＋4px 修正之
    flex-basis: calc(100% / 10 - #{$margin-gutter} + 4px);
    max-width: calc(100% / 10 - #{$margin-gutter} + 4px);

    &:last-child{
      // &:nth-child(10n+1){ margin-right: calc( (100% / #{$columns} - #{$margin-gutter})*9 + (#{$margin-gutter}*#{$columns})*9 / (#{$columns} - 1) ); }
      &:nth-child(10n+2){ margin-right: calc( (100% / #{$columns} - #{$margin-gutter})*8 + (#{$margin-gutter}*#{$columns})*8 / (#{$columns} - 1) - 4px ); }
      &:nth-child(10n+3){ margin-right: calc( (100% / #{$columns} - #{$margin-gutter})*7 + (#{$margin-gutter}*#{$columns})*7 / (#{$columns} - 1) - 4px ); }
      &:nth-child(10n+4){ margin-right: calc( (100% / #{$columns} - #{$margin-gutter})*6 + (#{$margin-gutter}*#{$columns})*6 / (#{$columns} - 1) - 4px ); }
      &:nth-child(10n+5){ margin-right: calc( (100% / #{$columns} - #{$margin-gutter})*5 + (#{$margin-gutter}*#{$columns})*5 / (#{$columns} - 1) - 4px ); }
      &:nth-child(10n+6){ margin-right: calc( (100% / #{$columns} - #{$margin-gutter})*4 + (#{$margin-gutter}*#{$columns})*4 / (#{$columns} - 1) - 4px ); }
      &:nth-child(10n+7){ margin-right: calc( (100% / #{$columns} - #{$margin-gutter})*3 + (#{$margin-gutter}*#{$columns})*3 / (#{$columns} - 1) - 4px ); }
      &:nth-child(10n+8){ margin-right: calc( (100% / #{$columns} - #{$margin-gutter})*2 + (#{$margin-gutter}*#{$columns})*2 / (#{$columns} - 1) - 4px ); }
      &:nth-child(10n+9){ margin-right: calc( (100% / #{$columns} - #{$margin-gutter}) + #{$margin-gutter}*#{$columns} / (#{$columns} - 1) - 4px ); }
    }
  } @else if $columns == 11 {
    flex-basis: calc(100% / 11 - #{$margin-gutter} + 4px);
    max-width: calc(100% / 11 - #{$margin-gutter} + 4px);
    &:last-child{
      // &:nth-child(11n){}
      // &:nth-child(11n+1){ margin-right: calc( (100% / #{$columns} - #{$margin-gutter})*10 + (#{$margin-gutter}*#{$columns})*10 / (#{$columns} - 1) ); }
      &:nth-child(11n+2){ margin-right: calc( (100% / #{$columns} - #{$margin-gutter})*9 + (#{$margin-gutter}*#{$columns})*9 / (#{$columns} - 1) - 4px ); }
      &:nth-child(11n+3){ margin-right: calc( (100% / #{$columns} - #{$margin-gutter})*8 + (#{$margin-gutter}*#{$columns})*8 / (#{$columns} - 1) - 4px ); }
      &:nth-child(11n+4){ margin-right: calc( (100% / #{$columns} - #{$margin-gutter})*7 + (#{$margin-gutter}*#{$columns})*7 / (#{$columns} - 1) - 4px ); }
      &:nth-child(11n+5){ margin-right: calc( (100% / #{$columns} - #{$margin-gutter})*6 + (#{$margin-gutter}*#{$columns})*6 / (#{$columns} - 1) - 4px ); }
      &:nth-child(11n+6){ margin-right: calc( (100% / #{$columns} - #{$margin-gutter})*5 + (#{$margin-gutter}*#{$columns})*5 / (#{$columns} - 1) - 4px ); }
      &:nth-child(11n+7){ margin-right: calc( (100% / #{$columns} - #{$margin-gutter})*4 + (#{$margin-gutter}*#{$columns})*4 / (#{$columns} - 1) - 4px ); }
      &:nth-child(11n+8){ margin-right: calc( (100% / #{$columns} - #{$margin-gutter})*3 + (#{$margin-gutter}*#{$columns})*3 / (#{$columns} - 1) - 4px ); }
      &:nth-child(11n+9){ margin-right: calc( (100% / #{$columns} - #{$margin-gutter})*2 + (#{$margin-gutter}*#{$columns})*2 / (#{$columns} - 1) - 4px ); }
      &:nth-child(11n+10){ margin-right: calc( (100% / #{$columns} - #{$margin-gutter}) + #{$margin-gutter}*#{$columns} / (#{$columns} - 1) - 4px ); }
    }
  } @else if $columns == 12 {
    flex-basis: calc(100% / 12 - #{$margin-gutter} + 4px);
    max-width: calc(100% / 12 - #{$margin-gutter} + 4px);
    &:last-child{
      // &:nth-child( 12n - 12) { margin-right: 0 !important; }
      // &:nth-child(12n){ margin-right: 0; }
      // &:nth-child(12n+1){ margin-right: calc( (100% / #{$columns} - #{$margin-gutter})*11 + (#{$margin-gutter}*#{$columns})*11 / (#{$columns} - 1) ); }
      &:nth-child(12n+2){ margin-right: calc( (100% / #{$columns} - #{$margin-gutter})*10 + (#{$margin-gutter}*#{$columns})*10 / (#{$columns} - 1) - 4px ); }
      &:nth-child(12n+3){ margin-right: calc( (100% / #{$columns} - #{$margin-gutter})*9 + (#{$margin-gutter}*#{$columns})*9 / (#{$columns} - 1) - 4px ); }
      &:nth-child(12n+4){ margin-right: calc( (100% / #{$columns} - #{$margin-gutter})*8 + (#{$margin-gutter}*#{$columns})*8 / (#{$columns} - 1) - 4px ); }
      &:nth-child(12n+5){ margin-right: calc( (100% / #{$columns} - #{$margin-gutter})*7 + (#{$margin-gutter}*#{$columns})*7 / (#{$columns} - 1) - 4px ); }
      &:nth-child(12n+6){ margin-right: calc( (100% / #{$columns} - #{$margin-gutter})*6 + (#{$margin-gutter}*#{$columns})*6 / (#{$columns} - 1) - 4px ); }
      &:nth-child(12n+7){ margin-right: calc( (100% / #{$columns} - #{$margin-gutter})*5 + (#{$margin-gutter}*#{$columns})*5 / (#{$columns} - 1) - 4px ); }
      &:nth-child(12n+8){ margin-right: calc( (100% / #{$columns} - #{$margin-gutter})*4 + (#{$margin-gutter}*#{$columns})*4 / (#{$columns} - 1) - 4px ); }
      &:nth-child(12n+9){ margin-right: calc( (100% / #{$columns} - #{$margin-gutter})*3 + (#{$margin-gutter}*#{$columns})*3 / (#{$columns} - 1) - 4px ); }
      &:nth-child(12n+10){ margin-right: calc( (100% / #{$columns} - #{$margin-gutter})*2 + (#{$margin-gutter}*#{$columns})*2 / (#{$columns} - 1) - 4px ); }
      &:nth-child(12n+11){ margin-right: calc( (100% / #{$columns} - #{$margin-gutter}) + #{$margin-gutter}*#{$columns} / (#{$columns} - 1) - 4px ); }
    }
  }
}

// 子層 - 自訂欄寬
@mixin flex-layout-free($columns-free, $margin-gutter) {
  // 啟動計算公式 ------
  // 佔欄數（$columns）、欄距（$margin-gutter）
  // width ＝ 100% / 12 * 佔幾欄 - 欄距
  flex-basis: calc(100% / 12 * #{$columns-free} - #{$margin-gutter});
  max-width: calc(100% / 12 * #{$columns-free} - #{$margin-gutter});
  margin-left: calc(#{$margin-gutter} / 2);
  margin-right: calc(#{$margin-gutter} / 2);
}

// 範例：
// // 子層 - 平均欄寬
// .col{
//   @include flex-layout(欄數, 間距);
// }
// 
// // 子層 - 自訂欄寬
// .col{
//   @include flex-layout(欄數, 間距);
// }


// 未補滿的情況時，剩餘欄位靠左
// @mixin proportional($columns, $margin-gutter){
//   &:last-child{
//     &:nth-child( #{$columns}n - 1) {
//       margin-right: calc( (100% / #{$columns} - #{$margin-gutter}) + #{$margin-gutter}*#{$columns} / (#{$columns} - 1) );
//     }
//     &:nth-child( #{$columns}n - 2) {
//       margin-right: calc( (100% / #{$columns} - #{$margin-gutter})*2 + (#{$margin-gutter}*#{$columns})*2 / (#{$columns} - 1) );
//     }
//   }
// }






